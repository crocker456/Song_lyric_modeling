ggplot(blue_jays, aes(Mass, Head)) +
geom_point(pch = 21, fill = "gray25", color = "white", size = 2.5) +
scale_x_continuous(name = "body mass (g)") +
scale_y_continuous(name = "head length (mm)") +
theme_dviz_grid()
# run setup script
source("_common.R")
install.packages("dviz.supp")
install.packages("geniusr")
library(geniusR)
install.packages("geniusR")
devtools::install_github("josiahparry/geniusR")
library(geniusR)
library(tidyverse)
library(tidytext)
install.packages("tidytext")
devtools::install_github("josiahparry/geniusR")
library(geniusR)
library(tidyverse)
library(tidytext)
high_as_hope <- genius_album(artist = "Florence the Machine", album = "High as Hope")
DNA <- genius_lyrics(artist = "Kendrick Lamar", song = "DNA.") DNA %>% mutate(line = row_number())
library(tidyverse)
library(tidytext)
tidy_hope <- high_as_hope %>%
unnest_tokens(word,lyric) %>%
anti_join(stop_words)
song_words <- tidy_hope %>%
count(track_title, word, sort = TRUE) %>%
ungroup()
song_words <- tidy_hope %>%
count(track_title, word, sort = TRUE) %>%
ungroup()
song_words <- song_words %>%
bind_tf_idf(word, track_title, n) %>%
arrange(desc(tf_idf))
head(song_words)
song_words %>%
mutate(word = factor(word, levels = rev(unique(word)))) %>%
group_by(track_title) %>%
top_n(5) %>%
ungroup() %>%
ggplot(aes(word, tf_idf, fill = track_title)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~track_title, ncol = 2, scales = "free") +
coord_flip()
high_as_hope <- genius_album(artist = "Doggystyle", album = "Snoop Dogg")
high_as_hope <- genius_album(artist = "Doggystyle", album = "Snoop Doggy Dog")
devtools::install_github("josiahparry/geniusR")
library(geniusR)
library(tidyverse)
library(tidytext)
high_as_hope <- genius_album(artist = "Doggystyle", album = "Snoop Doggy Dog)
high_as_hope <- genius_album(artist = "Rage Against The Machine", album = "Rage Against The Machine")
devtools::install_github("josiahparry/geniusR")
library(geniusR)
library(tidyverse)
library(tidytext)
Rage <- genius_album(artist = "Rage Against The Machine", album = "Rage Against The Machine")
library(tidyverse)
library(tidytext)
tidy_rage <- Rage %>%
unnest_tokens(word,lyric) %>%
anti_join(stop_words)
song_words <- tidy_rage %>%
count(track_title, word, sort = TRUE) %>%
ungroup()
song_words <- song_words %>%
bind_tf_idf(word, track_title, n) %>%
arrange(desc(tf_idf))
head(song_words)
song_words %>%
mutate(word = factor(word, levels = rev(unique(word)))) %>%
group_by(track_title) %>%
top_n(5) %>%
ungroup() %>%
ggplot(aes(word, tf_idf, fill = track_title)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~track_title, ncol = 2, scales = "free") +
coord_flip()
song_words %>%
mutate(word = factor(word, levels = rev(unique(word)))) %>%
group_by(track_title) %>%
top_n(5) %>%
ungroup()
ggplot(aes(word, tf_idf, fill = track_title)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~track_title, ncol = 2, scales = "free") +
coord_flip()
song_words %>%
mutate(word = factor(word, levels = rev(unique(word)))) %>%
group_by(track_title) %>%
top_n(5) %>%
ungroup()
song_words %>%
mutate(word = factor(word, levels = rev(unique(word)))) %>%
group_by(track_title) %>%
top_n(5) %>%
ungroup()
ggplot(aes(word, tf_idf, fill = track_title)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~track_title, ncol = 2, scales = "free") +
coord_flip()
song_words %>%
mutate(word = factor(word, levels = rev(unique(word)))) %>%
group_by(track_title) %>%
top_n(5) %>%
ungroup() %>%
ggplot(aes(word, tf_idf, fill = track_title)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~track_title, ncol = 2, scales = "free") +
coord_flip()
View(Rage)
View(Rage)
library(geniusR)
library(tidyverse)
library(tidytext)
Rage <- genius_album(artist = "Rage Against The Machine", album = "Rage Against The Machine")
View(Rage)
song_words %>%
mutate(word = factor(word, levels = rev(unique(word)))) %>%
group_by(track_title) %>%
top_n(5) %>%
ungroup() %>%
ggplot(aes(word, tf_idf, fill = track_title)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~track_title, ncol = 2, scales = "free") +
song_words %>%
mutate(word = factor(word, levels = rev(unique(word)))) %>%
group_by(track_title) %>%
top_n(5) %>%
ungroup() %>%
ggplot(aes(word, tf_idf, fill = track_title)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~track_title, ncol = 2, scales = "free")
song_words %>%
mutate(word = factor(word, levels = rev(unique(word)))) %>%
group_by(track_title) %>%
top_n(10) %>%
ungroup() %>%
ggplot(aes(word, tf_idf, fill = track_title)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~track_title, ncol = 2, scales = "free")
song_words %>%
mutate(word = factor(word, levels = rev(unique(word)))) %>%
group_by(track_title) %>%
top_n(7) %>%
ungroup() %>%
ggplot(aes(word, tf_idf, fill = track_title)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~track_title, ncol = 2, scales = "free")
song_words %>%
mutate(word = factor(word, levels = rev(unique(word)))) %>%
group_by(track_title) %>%
top_n(5) %>%
ungroup() %>%
ggplot(aes(word, tf_idf, fill = track_title)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~track_title, ncol = 2, scales = "free")
View(song_words)
df = song_words %>%
mutate(word = factor(word, levels = rev(unique(word)))) %>%
group_by(track_title) %>%
top_n(5) %>%
ungroup()
df %>%  ggplot(aes(word, tf_idf, fill = track_title)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~track_title, ncol = 2, scales = "free")
df = song_words %>%
mutate(word = factor(word, levels = rev(unique(word)))) %>%
group_by(track_title) %>%
top_n(3) %>%
ungroup()
df %>%  ggplot(aes(word, tf_idf, fill = track_title)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~track_title, ncol = 2, scales = "free")
df = song_words %>%
mutate(word = factor(word, levels = rev(unique(word)))) %>%
group_by(track_title) %>%
top_n(5) %>%
ungroup()
df %>%  ggplot(aes(word, tf_idf, fill = track_title)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~track_title, ncol = 2, scales = "free")
df = song_words %>%
mutate(word = factor(word, levels = rev(unique(word)))) %>%
group_by(track_title) %>%
top_n(5) %>%
ungroup()
df %>%  ggplot(aes(word, tf_idf, fill = track_title)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~track_title, ncol = 1, scales = "free")
df = song_words %>%
mutate(word = factor(word, levels = rev(unique(word)))) %>%
group_by(track_title) %>%
top_n(5) %>%
ungroup()
df %>%  ggplot(aes(word, tf_idf, fill = track_title)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~track_title, ncol = 3, scales = "free")
df = song_words %>%
mutate(word = factor(word, levels = rev(unique(word)))) %>%
group_by(track_title) %>%
top_n(5) %>%
ungroup()
df %>%  ggplot(aes(word, tf_idf, fill = track_title)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~track_title, ncol = 2, scales = "free")
library(geniusR)
library(tidyverse)
library(tidytext)
Rage <- genius_album(artist = "Steely Dan", album = "Aja")
library(geniusR)
library(tidyverse)
library(tidytext)
Steelydan <- genius_album(artist = "Steely Dan", album = "Aja")
library(tidyverse)
library(tidytext)
tidy_rage <- Steelydan %>%
unnest_tokens(word,lyric) %>%
anti_join(stop_words)
song_words <- tidy_rage %>%
count(track_title, word, sort = TRUE) %>%
ungroup()
song_words <- song_words %>%
bind_tf_idf(word, track_title, n) %>%
arrange(desc(tf_idf))
head(song_words)
df = song_words %>%
mutate(word = factor(word, levels = rev(unique(word)))) %>%
group_by(track_title) %>%
top_n(5) %>%
ungroup()
df %>%  ggplot(aes(word, tf_idf, fill = track_title)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~track_title, ncol = 2, scales = "free")
library(geniusR)
library(tidyverse)
library(tidytext)
Steelydan <- genius_album(artist = "Steely Dan", album = "Greatest Hits")
library(geniusR)
library(tidyverse)
library(tidytext)
Steelydan <- genius_album(artist = "Grateful Dead", album = "Working Man's Dead")
library(geniusR)
library(tidyverse)
library(tidytext)
Steelydan <- genius_album(artist = "Grateful Dead", album = "Workingman's Dead")
library(tidyverse)
library(tidytext)
tidy_rage <- Steelydan %>%
unnest_tokens(word,lyric) %>%
anti_join(stop_words)
song_words <- tidy_rage %>%
count(track_title, word, sort = TRUE) %>%
ungroup()
song_words <- song_words %>%
bind_tf_idf(word, track_title, n) %>%
arrange(desc(tf_idf))
head(song_words)
df = song_words %>%
mutate(word = factor(word, levels = rev(unique(word)))) %>%
group_by(track_title) %>%
top_n(5) %>%
ungroup()
df %>%  ggplot(aes(word, tf_idf, fill = track_title)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~track_title, ncol = 2, scales = "free")
# R package for pulling in song lyrics
library(geniusR)
# collection of tidy data analysis pacakages
library(tidyverse)
# Tidy text manipulations
library(tidytext)
# Scape the lyrics for my favorite Grateful Dead Album "Workingman's Dead"
Dead <- genius_album(artist = "Trap House 3", album = "Gucci Mane")
# R package for pulling in song lyrics
library(geniusR)
# collection of tidy data analysis pacakages
library(tidyverse)
# Tidy text manipulations
library(tidytext)
# Scape the lyrics for my favorite Grateful Dead Album "Workingman's Dead"
Dead <- genius_album(artist = "Gucci Mane", album = "Trap House 3")
# anti_join to remove stop words
tidy_Gucci <- Gucci %>%
unnest_tokens(word,lyric) %>%
anti_join(stop_words)
# R package for pulling in song lyrics
library(geniusR)
# collection of tidy data analysis pacakages
library(tidyverse)
# Tidy text manipulations
library(tidytext)
# Scape the lyrics for my favorite Grateful Dead Album "Workingman's Dead"
Gucci <- genius_album(artist = "Gucci Mane", album = "Trap House 3")
# anti_join to remove stop words
tidy_Gucci <- Gucci %>%
unnest_tokens(word,lyric) %>%
anti_join(stop_words)
song_words <- tidy_Gucci %>%
count(track_title, word, sort = TRUE) %>%
ungroup()
song_words <- song_words %>%
bind_tf_idf(word, track_title, n) %>%
arrange(desc(tf_idf))
head(song_words)
df = song_words %>%
mutate(word = factor(word, levels = rev(unique(word)))) %>%
group_by(track_title) %>%
top_n(5) %>%
ungroup()
df %>%  ggplot(aes(word, tf_idf, fill = track_title)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~track_title, ncol = 2, scales = "free")
library(ggthemes)
df = song_words %>%
mutate(word = factor(word, levels = rev(unique(word)))) %>%
group_by(track_title) %>%
top_n(5) %>%
ungroup()
df %>%  ggplot(aes(word, tf_idf, fill = track_title)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~track_title, ncol = 2, scales = "free") +
theme_fivethirtyeight()
setwd("~/Song_lyric_modeling")
library(ggthemes)
df = song_words %>%
mutate(word = factor(word, levels = rev(unique(word)))) %>%
group_by(track_title) %>%
top_n(5) %>%
ungroup()
plot1 = df %>%  ggplot(aes(word, tf_idf, fill = track_title)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~track_title, ncol = 2, scales = "free") +
theme_fivethirtyeight()
ggsave("gucci.png", plot1)
library(ggthemes)
df = song_words %>%
mutate(word = factor(word, levels = rev(unique(word)))) %>%
group_by(track_title) %>%
top_n(5) %>%
ungroup()
plot1 = df %>%  ggplot(aes(word, tf_idf, fill = track_title)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~track_title, ncol = 2, scales = "free") +
theme_fivethirtyeight()
ggsave("gucci.png", plot1, height = 14, width = 14)
